{
    "atom-web": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/Atom-web/package.json",
      "scripts": {
        "start": "node ./config/server --env dev --server mock",
        "build": "node ./config/build",
        "remote": "node ./config/server --env dev --server remote",
        "release": "npm run build && npm run server"
      }
    },
    "bachelor-web": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/bachelor-web/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "server-remote": "node ./config/server --env dev --server remote",
        "dll": "node ./config/dll.js",
        "build": "node ./config/build",
        "server-build": "node ./config/build --target dev & node ./config/server --env build --server remote",
        "run_server": "pm2 start app.js -n 'shark-angularX-template'",
        "start": "node ./config/server --env dev --server mock",
        "deploy": "sh deploy-test.sh dev /home/wpd/deploy/shark-deploy/config/deploy.js"
      }
    },
    "datahub-web-front": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/datahub-web-front/package.json",
      "scripts": {
        "start": "node ./config/server --env dev --server mock",
        "build": "node ./config/build",
        "remote": "node ./config/server --env dev --server remote",
        "release": "npm run build && npm run server"
      }
    },
    "datahub-web": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/datahub-web/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "server-remote": "node ./config/server --env dev --server remote",
        "dll": "node ./config/dll.js",
        "build": "node ./config/build",
        "server-build": "node ./config/build --target dev & node ./config/server --env build --server mock",
        "run_server": "pm2 start app.js -n 'shark-angularX-template'",
        "start": "node ./config/server --env dev --server mock",
        "deploy": "sh deploy-test.sh dev /home/wpd/deploy/shark-deploy/config/deploy.js"
      }
    },
    "hound-web-shark-new": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/hound-web-shark-new/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock",
        "deploy-test": "sh deploy-test.sh dev /path/to/deply/config.js",
        "run-server": "pm2 start app.js -n 'shark-angularX-template'"
      }
    },
    "hound-web": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/hound-web/package.json",
      "scripts": {
        "server": "node server --env dev --server mock",
        "test": "node server --env dev --server http://10.241.12.29:8100/",
        "dll": "webpack --config webpack.dll.config.js",
        "build": "node build"
      }
    },
    "waiter-web": {
      "packageJson": "/Volumes/store/workspace/ne/bigdata/waiter-web/package.json",
      "scripts": {
        "start": "node ./config/server --env dev --server mock",
        "server": "node ./config/server --env dev --server mock",
        "remote": "node ./config/server --env dev --server remote",
        "build": "node ./config/build",
        "release": "npm run build && npm run server"
      }
    },
    "cockpit": {
      "packageJson": "/Volumes/store/workspace/ne/support/documents/package.json",
      "scripts": {
        "start": "node server --server mock",
        "test": "node server --server http://127.0.0.1:9011",
        "dll": "webpack --config webpack.dll.config.js"
      }
    },
    "@netease/dsui": {
      "packageJson": "/Volumes/store/workspace/ne/datasmart/dsui/package.json",
      "scripts": {
        "test": "",
        "lint": "tslint ./src/**/*.ts -t codeFrame",
        "doc": "gulp doc",
        "doc-dev": "concurrently \"npm run doc -- --watch\" \"cd docs && lite-server\""
      }
    },
    "shark-angularx-template": {
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "start": "npm run server",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock",
        "run-server": "pm2 start app.js -n 'shark-angularX-template'"
      }
    },
    "shark-angularx-template-bringup": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-angularx-template-bringup/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "start": "node ./config/server --env dev --server mock",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock",
        "deploy-test": "sh deploy-test.sh dev ",
        "run-server": "pm2 start app.js -n 'shark-angularX-template'",
        "deploy": "node ./config/deploy --branch dev --target test"
      }
    },
    "@shark/shark-angularx-template": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-angularx-template/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "start": "npm run server",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock"
      }
    },
    "@shark/shark-angularX-webpack": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-angularX-webpack/package.json",
      "scripts": {
        "server": "node ./scripts/server --env dev --server mock",
        "start": "npm run server",
        "build": "node ./scripts/build --target test --branch dev",
        "server-build": "npm run build && node ./scripts/server --env build --server mock",
        "server-without-build": "node ./scripts/server --env build --server mock"
      }
    },
    "@shark/shark-angularX": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-angularX/package.json",
      "scripts": {
        "server": "node server",
        "build": "node build",
        "dll": "webpack --config webpack.dll.config.js"
      }
    },
    "shark-cli": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-cli-backup/package.json",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }
    },
    "@shark/shark-cli": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-cli/package.json",
      "scripts": {
        "test": "npx egg-bin test",
        "build": "tsc",
        "dev": "tsc -w",
        "prepare": "tsc"
      }
    },
    "@shark/shark-css": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-css/package.json",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1",
        "sass-lint": "sass-lint -v -q",
        "server": "node server",
        "dll": "webpack --config webpack.dll.config.js"
      }
    },
    "@shark/shark-deploy": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-deploy/package.json",
      "scripts": {
        "test": "sh ./test/deploy-test.sh master",
        "online": "sh ./test/deploy-online.sh master",
        "deploy:test": "node ./test/deploy.js --target test",
        "deploy:online": "node ./test/deploy.js --target online"
      }
    },
    "@shark/shark-doc-angularx": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-doc-angularx/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "build": "node ./config/build"
      }
    },
    "@shark/shark-doc-engine": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-doc-engine/package.json",
      "scripts": {
        "server": "node ./config/server --env dev",
        "start": "node ./config/server --env dev",
        "build": "node ./config/build",
        "server-build": "npm run build && node build/app/server/index.js"
      }
    },
    "@shark/shark-docs": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-doc/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "server-remote": "node ./config/server --env dev --server remote",
        "dll": "node ./config/dll.js",
        "build": "node ./config/build",
        "server-build": "node ./config/build --target dev & node ./config/server --env build --server mock",
        "run_server": "pm2 start ./build/server/index.js -n 'shark-doc'",
        "online_server": "NODE_ENV=production pm2 start ./build/server/index.js -n shark-doc"
      }
    },
    "shark-docsify": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-docsify/package.json",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }
    },
    "@shark/shark-ui": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-ui/package.json",
      "scripts": {
        "server": "shark server",
        "build": "rimraf build && shark build online"
      }
    },
    "shark-urs-login-template": {
      "packageJson": "/Volumes/store/workspace/ne/shark/shark-urs-login-template/package.json",
      "scripts": {
        "test": "node test/index",
        "build": "webpack && mv build/mimg/app build/ ",
        "deploy": "npm run build && node deploy"
      }
    },
    "@yanxuan-ark/yanxuan-hornet-web": {
      "packageJson": "/Volumes/store/workspace/ne/yanxuan-ark/yanxuan-hornet-web/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "start": "npm run server",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock"
      }
    },
    "nei-crawler": {
      "packageJson": "/Volumes/store/workspace/ne/tools/nei-crawler/package.json",
      "scripts": {
        "test": "node index.js"
      }
    },
    "tless": {
      "packageJson": "/Volumes/store/workspace/ne/tools/tless/package.json",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }
    },
    "yanxuan-ark-web": {
      "packageJson": "/Volumes/store/workspace/ne/yanxuan-ark/yanxuan-ark-web/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "start": "npm run server",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock",
        "run-server": "pm2 start app.js -n 'shark-angularX-template'"
      }
    },
    "yanxuan-producer-admin": {
      "packageJson": "/Volumes/store/workspace/ne/yanxuan-supplychain/yanxuan-producer-admin/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "start": "npm run server",
        "build": "node ./config/build",
        "server-remote": "node ./config/server --env dev --server remote",
        "server-build": "npm run build && node ./config/server --env build --server mock",
        "run-server": "pm2 start app.js -n 'yanxuan-producer-admin'"
      }
    },
    "yanxuan-sales-finance-fed": {
      "packageJson": "/Volumes/store/workspace/ne/yanxuan/yanxuan-sales-finance-fed/package.json",
      "scripts": {
        "server": "node ./config/server --env dev --server mock",
        "server-build": "node ./config/server --env build --server mock",
        "server-remote": "node ./config/server --env dev --server remote",
        "clean": "rimraf build",
        "build": "npm run clean && node ./config/build --target dev"
      }
    }
  }